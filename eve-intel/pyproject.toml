[tool.poetry]
name = "eve-intel"
version = "0.1.0"
description = "EVE Online Market Intelligence System"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "eve_intel"}]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.9.0"
pydantic-settings = "^2.6.0"
typer = "^0.12.0"
httpx = "^0.27.0"
sqlalchemy = "^2.0.0"
alembic = "^1.13.0"
asyncpg = "^0.30.0"
psycopg2-binary = "^2.9.0"
clickhouse-connect = "^0.8.0"
redis = {extras = ["hiredis"], version = "^5.0.0"}
structlog = "^24.4.0"
apscheduler = "^3.10.0"
python-dotenv = "^1.0.0"
tenacity = "^9.0.0"
rich = "^13.7.0"
aiosqlite = "^0.20.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
ruff = "^0.7.0"
black = "^24.10.0"
mypy = "^1.11.0"
pre-commit = "^4.0.0"
pytest-httpx = "^0.30.0"
types-redis = "^4.6.0"

[tool.black]
line-length = 100
target-version = ['py313']

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "ANN", "S", "B", "A", "C4", "DTZ", "T10", "EM", "ISC", "ICN", "G", "PIE", "T20", "PT", "Q", "RET", "SIM", "ARG", "PTH", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["ANN101", "ANN102", "ANN401", "S101", "PLR0913", "TRY003"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[[tool.mypy.overrides]]
module = "clickhouse_connect.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "apscheduler.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=eve_intel --cov-report=term-missing --cov-report=html --cov-fail-under=35"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
